<?php
/* Magedelight
 * Copyright (C) 2016 Magedelight <info@magedelight.com>
 *
 * NOTICE OF LICENSE
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://opensource.org/licenses/gpl-3.0.html.
 *
 * @category Magedelight
 * @package Magedelight_Giftcard
 * @copyright Copyright (c) 2016 Mage Delight (http://www.magedelight.com/)
 * @license http://opensource.org/licenses/gpl-3.0.html GNU General Public License,version 3 (GPL-3.0)
 * @author Magedelight <info@magedelight.com>
*/
namespace Magedelight\Giftcard\Observer\AdminHtml;

use Magento\Framework\Event\Observer;
use Magento\Framework\Event\ObserverInterface;
use Magedelight\Giftcard\Model\CodeFactory;
use Magedelight\Giftcard\Helper\Data;
use Magento\Backend\Model\Auth\Session;

/**
 * Class InvoiceSaveAfter
 */
class InvoiceSaveAfter implements ObserverInterface
{
    public $codeFactory;
    
    /**
     * @var Session
     */
    public $authSession;
    
    public function __construct(
        CodeFactory $codeFactory,
        Data $helper,        
        Session $authSession
    ){
        $this->codeFactory = $codeFactory;
        $this->helper = $helper;
        $this->authSession = $authSession;
    }

    public function getCurrentUser()
    {
        return $this->authSession->getUser();
    }
    
    public function execute(Observer $observer)
    {   
        if (!$this->helper->isActive())
            return;

        $order = $observer->getEvent()->getInvoice()->getOrder();
        $giftCardCollection = $this->codeFactory->create()->getCollection()
            ->addFieldToFilter('order_id', $order->getId())
            ->addFieldToFilter('status', \Magedelight\Giftcard\Model\Code::STATUS_PENDING);
        
        if($giftCardCollection->count() == 0)
            return;

        foreach($giftCardCollection as $giftCard){
            $giftCard->setStatus(\Magedelight\Giftcard\Model\Code::STATUS_SOLD);
            $giftCard->setExpiredAt();
            $giftCard->getResource()->save($giftCard);
            $itemsData = $giftCard->getData();
            if((isset($itemsData['send_friend']) AND $itemsData['send_friend'] == 1)
            AND 
            (!isset($itemsData['recipient_ship']) AND $itemsData['recipient_ship'] != 1))
            {
                $this->helper->sendToFriend($itemsData);
            }
            else{
                $this->helper->sendToCustomer($itemsData);
            }
            $comments = 'Invoice Generated By Admin';
            $action_by = $this->getCurrentUser()->getUsername();
            $transactionData = $this->helper->mapGiftcardTransaction($giftCard,'Create',$action_by,$comments,$order->getId());
            $this->helper->addGicardftTransaction($transactionData);
        }
        return $this;
    }//end execute()   
}